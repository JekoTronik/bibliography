(group "Distributed, Parallel, and Concurrent Programming")

(group "Scheme Dialects for Distributed Programming")

(id germain2006concurrency)
(type inproceedings)
(title "Concurrency oriented programming in Termite Scheme")
(author "Germain, Guillaume")
(author "Feeley, Marc")
(author "Monnier, Stefan")
(booktitle "2006 Workshop on Scheme and Functional Programming")
(pages "20")
(year 2006)
(month 9)
(organization "Citeseer")
(pdf "http://schemeworkshop.org/2006/09-germain.pdf")
(pdf "https://www.iro.umontreal.ca/~feeley/papers/GermainFeeleyMonnierSW06.pdf")
(pdf "http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.125.1527&rep=rep1&type=pdf")
(abstract "Termite Scheme is a variant of Scheme intended for distributed computing. It offers a simple and powerful concurrency model, inspired by the Erlang programming language, which is based on a message-passing model of concurrency." "Our system is well suited for building custom protocols and abstractions for distributed computation. Its open network model allows for the building of non-centralized distributed applications." "The possibility of failure is reflected in the model, and ways to handle failure are available in the language. We exploit the existence of first class continuations in order to allow the expression of high-level concepts such as process migration." "We describe the Termite model and its implications, how it compares to Erlang, and describe sample applications built with Termite. We conclude with a discussion of the current implementation and its performance.")

(id pierard2007towards)
(type inproceedings)
(title "Towards a portable and mobile Scheme interpreter")
(author "PiÃ©rard, Adrien")
(author "Feeley, Marc")
(booktitle "Proceedings of the Scheme and Functional Programming Workshop")
(pages "59--68")
(year 2007)
(pdf "https://www-labs.iro.umontreal.ca/~feeley/papers/PierardFeeleySW07.pdf")
(pdf "https://www.iro.umontreal.ca/~feeley/papers/PierardFeeleySW07.pdf")
(abstract "The transfer of program data between the nodes of a distributed system is a fundamental operation. It usually requires some form of data serialization. For a functional language such as Scheme it is clearly desirable to also allow the unrestricted transfer of functions between nodes. With the goal of developing a portable implementation of the Termite system we have designed the Mobit Scheme interpreter which supports unrestricted serialization of Scheme objects, including procedures and continuations. Mobit is derived from an existing Scheme in Scheme fast interpreter. We demonstrate how macros were valuable in transforming the interpreter while preserving its structure and maintainability. Our performance evaluation shows that the run time speed of Mobit is comparable to existing Scheme interpreters.")

(id fuchs1985dreme)
(type phdthesis)
(title "Dreme: for Life in the Net")
(author "Fuchs, Matthew")
(school "New York University")
;;(journal "Operating Systems Review")
;;(volume 19)
;;(number 5)
;;(pages "181--193")
(year 1995)
(ps "http://www.cs.nyu.edu/csweb/Research/Theses/fuchs_matthew.ps.gz")
(pdf "http://www.cs.nyu.edu/csweb/Research/Theses/fuchs_matthew.pdf")
(pdf "https://www.math.nyu.edu/media/mathfin/publications/fuchs_matthew.pdf")
(abstract "This dissertation makes four contributions towards supporting distributed, multiuser applications over open networks." "Dreme, a distributed dialect of the Scheme language in which all first-class language objects are mobile in the network. In particular, various distributed topologies, such as client/server and peer-to-peer, can be created by migrating closures with overlapping scopes around the network, correct inter-process communication being assured by Scheme's lexical scoping rules and network wide addressing. Threads of control are passed around through first-class distributed continuations." "A User Interface toolkit for coordinating events in multi-threaded, multi-user applications by organizing continuation callbacks into nested lexical scopes. Each event has certain attributes, such as synchronous/asynchronous. Certain events create new scopes with new events. Continuation callbacks allow both synchronous events which return values to their callers, and asynchronous ones. Application needn't be spread throughout the application, as with applications using an event-loop." "A distributed garbage collection algorithm that collects all cycles on an open network. The basic algorithm depends on maintaining the inverse reference graph (IRG) among network nodes (i.e., if a->b is in the regular graph, b->a is in the IRG). A single IRG traversal from any object determines the status of each object touched. Communication is decentralized (any object can choose to determine its status), garbage is touched O(1) times (in the absence of failures), it is fault-tolerant, and can handle malicious or faulty neighbors. Each operation uses messages linear in the size of the IRG. Overlapping operations perform like parallel quick sort." "An approach to using the Standard Generalized Markup Language (SGML) over the network to support distributed GUIs, intelligent clients, and mobile agents. SGML is a meta-grammar for creating domain specific document markup languages to which a variety of semantics (display, reading/writing databases, etc.) can be applied. The document, its grammar, and some semantics, are retrieved over the network. Applications normally create interfaces directly out of graphic objects to communicate with the user. However, if the interface has some semantics (and is parsable), a computational agent can interpret the interface and talk directly to the application on behalf of the human.")

;; MIT AI Lab Technical Report AITR-1627.
(id bawden1993implementing)
(type phdthesis)
(title "Implementing distributed systems using linear naming")
(author "Bawden, Alan")
(school "Massachusetts Institute of Technology")
(year 1993)
(pdf "https://dspace.mit.edu/bitstream/handle/1721.1/7085/AITR-1627.pdf")

(id moreau1997nexeme)
(type inproceedings)
(title "NeXeme: A distributed Scheme based on Nexus")
(author "Moreau, Luc")
(author "De Roure, David")
(author "Foster, Ian")
(booktitle "European Conference on Parallel Processing")
(pages "581--590")
(year 1997)
(month 8)
(organization "Springer")
(ps "http://www.ecs.soton.ac.uk/~lavm/papers/rsr-europar97.ps.gz")
(pdf "https://eprints.soton.ac.uk/252758/1/rsr_europar97.pdf")
(abstract "The remote service request, a form of remote procedure call, and the global pointer, a global naming mechanism, are two features at the heart of Nexus, a library for building distributed systems. NeXeme is an extension of Scheme that fully integrates both concepts in a mostly-functional framework, hence providing an expressive language for distributed computing. This paper presents a semantics for this Scheme extension, and also describes a NeXeme implementation, including its distributed garbage collector.")

(id moreau1997design)
(type inproceedings)
(title "Design and Semantics of Quantum: A Language to Control Resource Consumption in Distributed Computing")
(author "Moreau, Luc")
(author "Queinnec, Christian")
(booktitle "Usenix Conference on Domain-Specific Languages (DSL'97)")
(year 1997)
(month 10)
(ps "http://www.ecs.soton.ac.uk/~lavm/papers/dsl97.ps.gz")
(pdf "https://www.usenix.org/legacy/publications/library/proceedings/dsl97/full_papers/moreau/moreau.pdf")
(abstract "This paper describes the semantics of Quantum, a language that was specifically designed to control resource consumption of distributed computations, such as mobile agent style applications. In Quantum, computations can be driven by mastering their resource consumption. Resources can be understood as processors cycles, geographical expansion, bandwidth or duration of communications, etc. We adopt a generic view by saying that computations need energy to be performed. Quantum relies on three new primitives that deal with energy. The first primitive creates a tank of energy associated with a computation. Asynchronous notifications inform the user of energy exhaustion and computation termination. The other two primitives allow us to implement suspension and resumption of computations by emptying a tank and by supplying more energy to a tank. The semantics takes the form of an abstract machine with explicit parallelism and energy-related primitives.")

(id moreau1997manual)
(type techreport)
(title "NeXeme: A distributed Scheme based on Nexus (Reference Manual and User's Guide)")
(author "Moreau, Luc")
(institution "University of Southampton")
(year 1997)
(ps "http://www.ecs.soton.ac.uk/~lavm/NeXeme/man/ug.ps")

(id queinnec1998dmeroon)
(type techreport)
(title "DMeroon, A Distributed Class-based Causally-Coherent Data Model - General documentation")
(author "Queinnec, Christian")
(institution "LIP6, Sorbonne University and CNRS")
(number "039")
(year 1998)
(ps "http://pagesperso-systeme.lip6.fr/Christian.Queinnec/Reports/dmeroon.ps.gz")
(ps "ftp://ftp.lip6.fr/lip6/reports/1998/lip6.1998.039.ps.gz")

(id queinnec1997distributed)
(type inproceedings)
(title "Distributed generic functions")
(author "Queinnec, Christian")
(booktitle "Proc. 1997 France-Japan Workshop on Object-Based Parallel and Distributed Computing")
(year 1997)
(month 10)
(ps "http://pagesperso-systeme.lip6.fr/Christian.Queinnec/Papers/gendist.ps.gz")

;; TODO: This paper seems to have disappeared from the net:
;;
;; Christian Queinnec. "Bribes de DMeroon". _Actes des journ ees de
;; recherche sur la Memoire Partagee Repartie_. MPR 96. May 1996.

;; TODO: This paper also appeared in PSLS 95 - Parallel Symbolic
;; Langages and Systems. Lecture Notes in Computer Science 1068.
;; October 1995.
;;
(id queinnec1995dmeroon)
(type inproceedings)
(title "DMeroon: overview of a distributed class-based causally-coherent data model")
(author "Queinnec, Christian")
(booktitle "International Workshop on Parallel Symbolic Languages and Systems")
(pages "295--309")
(year 1995)
(organization "Springer")
(pdf "http://christian.queinnec.org/PDF/psls.pdf")
(ps "https://pages.lip6.fr/Christian.Queinnec/Papers/psls.ps.gz")

(id queinnec1992design)
(type inproceedings)
(title "Design of a concurrent and distributed language")
(author "Queinnec, Christian")
(author "De Roure, David")
(booktitle "US/Japan Workshop on Parallel Symbolic Computing")
(pages "233--259")
(year 1992)
(organization "Springer")
(ps "https://pages.lip6.fr/Christian.Queinnec/Papers/pwb.ps.gz")

(id queinnec1992concurrent)
(type inproceedings)
(title "A concurrent and distributed extension of scheme")
(author "Queinnec, Christian")
(booktitle "International Conference on Parallel Architectures and Languages Europe")
(pages "431--446")
(year 1992)
(organization "Springer")
(ps "https://pages.lip6.fr/Christian.Queinnec/Papers/parle.ps.gz")

;; TODO: La lettre du Transputer. 16. December 1992.
(id piquer1992transpive)
(type article)
(title "TransPive: A distributed Lisp system")
(author "Piquer, JosÃ©")
(author "Queinnec, Christian")
(year 1992)
(publisher "Citeseer")
(pdf "http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.41.8810&rep=rep1&type=pdf")

(id jagannathan1997communication)
(type inproceedings)
(title "Communication-passing style for coordination languages")
(author "Jagannathan, Suresh")
(booktitle "International Conference on Coordination Languages and Models")
(pages "131--149")
(year 1997)
(organization "Springer")
(ps "http://www.cs.purdue.edu/homes/suresh/papers/coord97.ps.gz")
(pdf "http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.39.6224&rep=rep1&type=pdf")

(id cejtin1995higher)
(type article)
(title "Higher-order distributed objects")
(author "Cejtin, Henry")
(author "Jagannathan, Suresh")
(author "Kelsey, Richard")
(journal "ACM Transactions on Programming Languages and Systems (TOPLAS)")
(volume 17)
(number 5)
(pages "704--739")
(year 1995)
(publisher "ACM New York, NY, USA")
(ps "http://www.cs.purdue.edu/homes/suresh/papers/toplas95.ps.gz")
(pdf "https://www.researchgate.net/profile/Suresh_Jagannathan/publication/2885348_Higher-Order_Distributed_Objects/links/544008b50cf21227a11ba1ae.pdf")

(id dwyer1981scheme)
(type techreport)
(title "A SCHEME for distributed processes")
(author "Dwyer, Rex A")
(author "Dybvig, R Kent")
(year 1981)
(institution "Computer Science Department, Indiana University")
(number 107)

(end-group)

(group "Distributed Garbage Collection")

;; TODO: Also University of Southampton. Technical Report M96/3. 1996.
(id moreau1996correctness)
(type inproceedings)
(title "Correctness of a distributed-memory model for Scheme")
(author "Moreau, Luc")
(booktitle "European Conference on Parallel Processing")
(pages "615--624")
(year 1996)
(month 8)
(organization "Springer")
(pdf "https://eprints.soton.ac.uk/252769/1/europar96.pdf")
(ps "https://www.southampton.ac.uk/~lavm/papers/tech963.ps.gz")

(id moreau1997distributed)
(type article)
(title "A Distributed Garbage Collector for NeXeme")
(author "Moreau, Luc")
(author "DeRoure, David")
(journal "Research Journal")
(year 1997)
(pdf "https://eprints.soton.ac.uk/409272/1/rj97.pdf")
(ps "http://www.ecs.soton.ac.uk/~lavm/papers/rj97.ps.gz")

(id moreau1998distributed)
(type inproceedings)
(title "A distributed garbage collector with diffusion tree reorganisation and mobile objects")
(author "Moreau, Luc")
(booktitle "Proceedings of the third ACM SIGPLAN international conference on Functional programming")
(pages "204--215")
(year 1998)
(month 9)
(pdf "https://eprints.soton.ac.uk/252754/1/icfp98.pdf")
(ps "http://www.ecs.soton.ac.uk/~lavm/papers/icfp98.ps.gz")

(id moreau1998hierarchical)
(type inproceedings)
(title "Hierarchical distributed reference counting")
(author "Moreau, Luc")
(booktitle "Proceedings of the First ACM SIGPLAN International Symposium on Memory Management (ISMM'98)")
(pages "57--67")
(year 1998)
(month 10)
(pdf "https://eprints.soton.ac.uk/252752/1/ismm98.pdf")
(ps "http://www.ecs.soton.ac.uk/~lavm/papers/ismm98.ps.gz")

(end-group)

(end-group)
